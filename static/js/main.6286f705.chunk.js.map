{"version":3,"sources":["workers/Worker.js","Card.js","workers/WorkerPool.js","config.js","lib/constants.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","synth","window","speechSynthesis","Card","workerFactory","size","details","utterThis","SpeechSynthesisUtterance","className","types","type","id","onClick","speak","map","src","WorkerPool","worker","this","i","poolSize","used","pool","jobs","hasOwnProperty","_method","args","_queueJob","method","Promise","y","n","push","_nextJob","pop","job","shift","then","catch","finally","TYPES","P","require","Pokedex","workers","navigator","hardwareConcurrency","App","useState","pokemon","setPokemon","offset","setOffset","limit","pokemonData","setPokemonData","allPokemon","setAllPokemon","search","setSearch","pokemonByType","setPokemonByType","useEffect","getPokemon","length","getPokemonData","getAllPokemon","workerFetch","updatePokemonByType","list","slice","prevState","includes","toLowerCase","result","filter","index","toString","a","options","getPokemonsList","results","getPokemonByName","data","loadMore","fetch","getTypeByName","Icon","Input","fluid","icon","iconPosition","placeholder","onChange","event","target","value","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.6286f705.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"fetch\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"061e58ee5301f793355f.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React from 'react';\nimport { IMG_DETAIL_URL } from './config'\nimport './Card.css'\n\nconst synth = window.speechSynthesis;\n\nfunction Card ({details}) {\n    const utterThis = new SpeechSynthesisUtterance(details.name);\n    return (\n        <div className={`card ${details.types[0].type.name}`}>\n            <div className=\"details\">\n                <div>\n                    <p className=\"id\">{`#${details.id}`}</p>\n                    <p className=\"name\" onClick={() => {synth.speak(utterThis);}}>{details.name}</p>\n                    <div className=\"types\">\n                        {details.types.map((type) => (\n                            <span className={`type ${type.type.name}`}>â¬¤</span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            {details.id >= 10000 ? null : <img className=\"img\" src={`${IMG_DETAIL_URL}/${details.id}.png`} />}\n        </div>\n    );\n}\n\nexport default Card;","export default (workerFactory, size) => new WorkerPool(workerFactory, size);\n\nclass WorkerPool {\n  constructor(workerFactory, size) {\n    let worker = (this.workerFactory = workerFactory)();\n    this.poolSize = size || 4;\n    this.used = 1;\n    this.pool = [worker];\n    this.jobs = [];\n    for (let i in worker) if (worker.hasOwnProperty(i) && typeof worker[i]==='function') {\n      this[i] = this._method(i);  // proxy all methods available on the worker\n    }\n  }\n  _method(name) {\n    return (...args) => this._queueJob(name, args);\n  }\n  _queueJob(method, args) {\n    return new Promise((y, n) => {\n      this.jobs.push({ method, args, y, n });\n      this._nextJob();\n    }) \n  }\n  _nextJob() {\n    let worker = this.pool.pop();\n    if (!worker) {\n      if (this.used >= this.poolSize) return;\n      this.used++;\n      worker = this.workerFactory();\n    }\n    const job = this.jobs.shift();\n    if (!job) return;\n    worker[job.method](...job.args).then(job.y).catch(job.n).finally(() => {\n      this.pool.push(worker);\n      this._nextJob();\n    });\n  }\n}","export const IMG_DETAIL_URL = 'https://raw.githubusercontent.com/cotyhamilton/pokemon/master/img/detail';\nexport const IMG_FULL_URL = 'https://raw.githubusercontent.com/cotyhamilton/pokemon/master/img/full';","export const TYPES = [\n    \"normal\",\n    \"fighting\",\n    \"flying\",\n    \"poison\",\n    \"ground\",\n    \"rock\",\n    \"bug\",\n    \"ghost\",\n    \"steel\",\n    \"fire\",\n    \"water\",\n    \"grass\",\n    \"electric\",\n    \"psychic\",\n    \"ice\",\n    \"dragon\",\n    \"dark\",\n    \"fairy\"\n]","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Card from './Card';\nimport { Icon, Input } from 'semantic-ui-react';\nimport Worker from 'workerize-loader!./workers/Worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport WorkerPool from './workers/WorkerPool';\nimport { TYPES } from './lib/constants';\n\nconst Pokedex = require('pokeapi-js-wrapper');\nconst P = new Pokedex.Pokedex();\n\nlet workers = WorkerPool(Worker, navigator.hardwareConcurrency > 4 ? navigator.hardwareConcurrency : 4);\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [limit] = useState(50);\n  const [pokemonData, setPokemonData] = useState({});\n  const [allPokemon, setAllPokemon] = useState([]);\n  const [search, setSearch] = useState('');\n  const [pokemonByType, setPokemonByType] = useState({});\n\n  useEffect(() => {\n    getPokemon();\n  }, [offset]);\n\n  useEffect(() => {\n    if (pokemon.length) {\n      pokemon.map((pokemon) => {\n        getPokemonData(pokemon.name);\n      })\n    }\n  }, [pokemon]);\n\n  useEffect(() => {\n    getAllPokemon();\n  }, []);\n\n  useEffect(() => {\n    if (allPokemon.length) {\n      allPokemon.map((pokemon) => (\n        workerFetch(pokemon)\n      ));\n    }\n  }, [allPokemon]);\n\n  useEffect(() => {\n    TYPES.map((type) => {\n      updatePokemonByType(type);\n    })\n  }, [])\n\n  useEffect(() => {\n    if (search === '') {\n      const list = allPokemon.slice(offset, offset + limit);\n      setPokemon((prevState) => ([...list]));\n    }\n    else {\n      if (TYPES.includes(search.toLowerCase())) {\n        setPokemon([...pokemonByType[search.toLowerCase()]]);\n      }\n      else {\n        const result = allPokemon.filter((pokemon, index) => {\n          return pokemon.name.includes(search.toLowerCase()) || (index + 1).toString().includes(search);\n        });\n        setPokemon([...result]);\n      }\n    }\n  }, [search]);\n\n  const getPokemon = async () => {\n    if (allPokemon.length > offset + limit) {\n      const list = allPokemon.slice(offset, offset + limit);\n      setPokemon((prevState) => ([...prevState, ...list]));\n    }\n    else {\n      const options = { offset, limit };\n      const list = await P.getPokemonsList(options);\n      setPokemon((prevState) => ([...prevState, ...list.results]));\n    }\n  }\n\n  const getPokemonData = async (pokemon) => {\n    if (!pokemonData.pokemon) {\n      const data = await P.getPokemonByName(pokemon);\n      setPokemonData((prevState) => ({ ...prevState, [data.name]: data }))\n    }\n  }\n\n  const getAllPokemon = async () => {\n    const list = await P.getPokemonsList();\n    setAllPokemon([...list.results]);\n  }\n\n  const loadMore = async () => {\n    await setOffset(offset + limit);\n  }\n\n  const workerFetch = async (pokemon) => {\n    const data = await workers.fetch(pokemon);\n    setPokemonData((prevState) => ({ ...prevState, [data.name]: data }))\n  }\n\n  const handleChange = event => {\n    setSearch(event.target.value);\n  }\n\n  const updatePokemonByType = async (type) => {\n    let list = [];\n    const data = await P.getTypeByName(type);\n    data.pokemon.map((pokemon) => {\n      list.push(pokemon.pokemon);\n    })\n    setPokemonByType((prevState) => ({...prevState, [type]: list}))\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Icon className=\"icon\" name=\"sliders\" size=\"large\" />\n      </header>\n      <div className=\"home\">\n        <h1>PokÃ©dex</h1>\n        <p>Search for PokÃ©mon by name or using the National PokÃ©dex number</p>\n        <Input\n          fluid\n          icon=\"search\"\n          iconPosition=\"left\"\n          placeholder=\"What PokÃ©mon are you looking for?\"\n          onChange={handleChange}\n        />\n        {pokemon.length ? pokemon.map((pokemon, index) => (\n          !!pokemonData[pokemon.name] ?\n            <Card\n              details={!!pokemonData[pokemon.name] ? pokemonData[pokemon.name] : null}\n            /> : null\n        )) : null}\n      </div>\n      {search === '' ?\n        <div className=\"page-navigation\">\n          <span onClick={loadMore}>more</span>\n        </div>\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}